// Generated by CoffeeScript 1.6.3
var chatApp, ws;

ws = null;

chatApp = angular.module("chatApp", []);

chatApp.factory("ChatService", function() {
  var service;
  service = {};
  service.setOnmessage = function(callback) {
    return service.onmessage = callback;
  };
  service.setOnopen = function(callback) {
    return service.onopen = callback;
  };
  service.connect = function() {
    if (service.ws) {
      return;
    }
    ws = new WebSocket("ws://" + location.hostname + ":9000");
    ws.onopen = function(event) {
      return service.onopen(event);
    };
    ws.onmessage = function(event) {
      return service.onmessage(event);
    };
    return service.ws = ws;
  };
  return service;
});

chatApp.controller("Ctrl", [
  '$scope', 'ChatService', function($scope, ChatService) {
    $scope.templateUrl = "/static/partials/ws4py.html";
    $scope.rooms = [];
    $scope.members = {};
    $scope.history = {};
    $scope.users = {};
    $scope.visitors = {};
    $scope.send = function(type, id) {
      var body, msg;
      body = this.text;
      if (body.length > 0) {
        msg = {
          path: 'message',
          type: type,
          id: parseInt(id),
          body: body
        };
        console.log('send:', msg);
        ws.send(JSON.stringify(msg));
        return this.text = "";
      }
    };
    ChatService.setOnopen(function() {
      ws.send(JSON.stringify({
        path: 'create_client'
      }));
      return console.log('Opened');
    });
    ChatService.setOnmessage(function(event) {
      var data, member, msg, room, _i, _j, _len, _len1, _ref, _ref1;
      data = JSON.parse(event.data);
      console.log('<<DATA>>:', data);
      switch (data.path) {
        case 'create_client':
          msg = {
            path: 'online'
          };
          msg.token = data.token;
          ws.send(JSON.stringify(msg));
          break;
        case 'online':
          msg = {
            path: 'rooms'
          };
          ws.send(JSON.stringify(msg));
          break;
        case 'rooms':
          $scope.rooms = data.rooms;
          _ref = data.rooms;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            room = _ref[_i];
            msg = {
              path: 'join',
              id: room.oid
            };
            ws.send(JSON.stringify(msg));
          }
          console.log('rooms:', $scope.rooms);
          break;
        case 'join':
          msg = {
            path: 'members',
            id: data.id
          };
          ws.send(JSON.stringify(msg));
          msg = {
            path: 'history',
            id: data.id
          };
          ws.send(JSON.stringify(msg));
          console.log('Joined:', data);
          break;
        case 'members':
          $scope.members[data.id] = {};
          _ref1 = data.members;
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            member = _ref1[_j];
            $scope.members[data.id][member.oid] = member;
          }
          console.log('Get members:', $scope.members, data.members);
          break;
        case 'history':
          $scope.history[data.id] = data.messages;
          console.log('Get history:', data.id, data.messages);
          break;
        case 'presence':
          switch (data.to_type) {
            case 'room':
              switch (data.action) {
                case 'join':
                  $scope.members[data.id][data.member.oid] = data.member;
                  break;
                case 'leave':
                  delete $scope.members[data.id][data.member.oid];
              }
          }
          break;
        case 'message':
          switch (data.to_type) {
            case 'room':
              console.log('received message:', data);
              $scope.history[data.to_id].push(data);
          }
          console.log('Message.type:', data.to_type);
      }
      return $scope.$apply();
    });
    ChatService.connect();
    return 'ok';
  }
]);
