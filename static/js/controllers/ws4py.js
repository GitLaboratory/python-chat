// Generated by CoffeeScript 1.6.3
var chatApp, ws;

ws = null;

chatApp = angular.module("chatApp", []);

chatApp.factory("ChatService", function() {
  var service;
  service = {};
  service.setOnmessage = function(callback) {
    return service.onmessage = callback;
  };
  service.setOnopen = function(callback) {
    return service.onopen = callback;
  };
  service.connect = function() {
    if (service.ws) {
      return;
    }
    ws = new WebSocket("ws://" + location.hostname + ":9000");
    ws.onopen = function(event) {
      return service.onopen(event);
    };
    ws.onmessage = function(event) {
      return service.onmessage(event);
    };
    return service.ws = ws;
  };
  return service;
});

chatApp.controller("Ctrl", [
  '$scope', 'ChatService', function($scope, ChatService) {
    $scope.templateUrl = "/static/partials/ws4py.html";
    $scope.rooms = [];
    $scope.users = [];
    ChatService.setOnopen(function() {
      ws.send(JSON.stringify({
        path: 'create_client'
      }));
      return console.log('Opened');
    });
    ChatService.setOnmessage(function(event) {
      var data, msg, rid, _i, _len, _ref;
      data = JSON.parse(event.data);
      console.log(data);
      switch (data.path) {
        case 'create_client':
          msg = {
            path: 'online'
          };
          msg.token = data.token;
          ws.send(JSON.stringify(msg));
          break;
        case 'online':
          msg = {
            path: 'rooms'
          };
          ws.send(JSON.stringify(msg));
          break;
        case 'rooms':
          _ref = data.rooms;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            rid = _ref[_i];
            $scope.rooms.push(rid);
          }
          break;
        case 'connect':
          msg = {
            path: 'message'
          };
          msg.type = data.type;
          msg.oid = data.id;
          msg.body = "From: " + data.id;
          ws.send(JSON.stringify(msg));
          break;
        case 'message':
          console.log('Message.type:', data.type);
      }
      return $scope.$apply();
    });
    ChatService.connect();
    return 'ok';
  }
]);

$(document).ready(function() {
  return $('form').submit(function(event) {
    var msg;
    msg = $('#message-input').val();
    if (msg.length > 0) {
      ws.send(msg);
      $('#message-input').val("");
    }
    return false;
  });
});
